"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = manageTableCellFocusInteraction;

/**
 * Function to help with focus management for selectable table cells.
 * @param {Object} key - React `event.key`.
 * @param {Element} ref - the cell to manage focus interaction for.
 */
function manageTableCellFocusInteraction(key, ref) {
  // eslint-disable-next-line unicorn/prefer-spread
  var tableRowChildren = Array.from(ref.parentElement.children);
  var columnIndex = tableRowChildren.indexOf(ref);
  var nextItemToFocus;

  if (key === 'ArrowLeft' || key === 'ArrowRight') {
    if (key === 'ArrowLeft' && columnIndex - 1 >= 0) {
      nextItemToFocus = tableRowChildren[columnIndex - 1];
    } else if (key === 'ArrowRight' && columnIndex + 1 < tableRowChildren.length) {
      nextItemToFocus = tableRowChildren[columnIndex + 1];
    }
  } else if (key === 'ArrowUp' || key === 'ArrowDown') {
    // eslint-disable-next-line unicorn/prefer-spread
    var tableBodyChildren = Array.from(ref.parentElement.parentElement.children);
    var rowIndex = tableBodyChildren.indexOf(ref.parentElement);
    var nextRow;

    if (key === 'ArrowUp' && rowIndex - 1 >= 0) {
      nextRow = tableBodyChildren[rowIndex - 1];
    } else if (key === 'ArrowDown' && rowIndex + 1 < tableBodyChildren.length) {
      nextRow = tableBodyChildren[rowIndex + 1];
    }

    if (nextRow && nextRow.children) {
      nextItemToFocus = nextRow.children[columnIndex];
    }
  }

  if (nextItemToFocus && nextItemToFocus.hasAttribute('tabindex')) {
    nextItemToFocus.focus();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYW5hZ2VUYWJsZUNlbGxGb2N1c0ludGVyYWN0aW9uIiwia2V5IiwicmVmIiwidGFibGVSb3dDaGlsZHJlbiIsIkFycmF5IiwiZnJvbSIsInBhcmVudEVsZW1lbnQiLCJjaGlsZHJlbiIsImNvbHVtbkluZGV4IiwiaW5kZXhPZiIsIm5leHRJdGVtVG9Gb2N1cyIsImxlbmd0aCIsInRhYmxlQm9keUNoaWxkcmVuIiwicm93SW5kZXgiLCJuZXh0Um93IiwiaGFzQXR0cmlidXRlIiwiZm9jdXMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdGFibGUvc3JjL21hbmFnZVRhYmxlQ2VsbEZvY3VzSW50ZXJhY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbiB0byBoZWxwIHdpdGggZm9jdXMgbWFuYWdlbWVudCBmb3Igc2VsZWN0YWJsZSB0YWJsZSBjZWxscy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBrZXkgLSBSZWFjdCBgZXZlbnQua2V5YC5cbiAqIEBwYXJhbSB7RWxlbWVudH0gcmVmIC0gdGhlIGNlbGwgdG8gbWFuYWdlIGZvY3VzIGludGVyYWN0aW9uIGZvci5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWFuYWdlVGFibGVDZWxsRm9jdXNJbnRlcmFjdGlvbihrZXksIHJlZikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdW5pY29ybi9wcmVmZXItc3ByZWFkXG4gIGNvbnN0IHRhYmxlUm93Q2hpbGRyZW4gPSBBcnJheS5mcm9tKHJlZi5wYXJlbnRFbGVtZW50LmNoaWxkcmVuKVxuICBjb25zdCBjb2x1bW5JbmRleCA9IHRhYmxlUm93Q2hpbGRyZW4uaW5kZXhPZihyZWYpXG5cbiAgbGV0IG5leHRJdGVtVG9Gb2N1c1xuICBpZiAoa2V5ID09PSAnQXJyb3dMZWZ0JyB8fCBrZXkgPT09ICdBcnJvd1JpZ2h0Jykge1xuICAgIGlmIChrZXkgPT09ICdBcnJvd0xlZnQnICYmIGNvbHVtbkluZGV4IC0gMSA+PSAwKSB7XG4gICAgICBuZXh0SXRlbVRvRm9jdXMgPSB0YWJsZVJvd0NoaWxkcmVuW2NvbHVtbkluZGV4IC0gMV1cbiAgICB9IGVsc2UgaWYgKFxuICAgICAga2V5ID09PSAnQXJyb3dSaWdodCcgJiZcbiAgICAgIGNvbHVtbkluZGV4ICsgMSA8IHRhYmxlUm93Q2hpbGRyZW4ubGVuZ3RoXG4gICAgKSB7XG4gICAgICBuZXh0SXRlbVRvRm9jdXMgPSB0YWJsZVJvd0NoaWxkcmVuW2NvbHVtbkluZGV4ICsgMV1cbiAgICB9XG4gIH0gZWxzZSBpZiAoa2V5ID09PSAnQXJyb3dVcCcgfHwga2V5ID09PSAnQXJyb3dEb3duJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL3ByZWZlci1zcHJlYWRcbiAgICBjb25zdCB0YWJsZUJvZHlDaGlsZHJlbiA9IEFycmF5LmZyb20oXG4gICAgICByZWYucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmNoaWxkcmVuXG4gICAgKVxuICAgIGNvbnN0IHJvd0luZGV4ID0gdGFibGVCb2R5Q2hpbGRyZW4uaW5kZXhPZihyZWYucGFyZW50RWxlbWVudClcblxuICAgIGxldCBuZXh0Um93XG4gICAgaWYgKGtleSA9PT0gJ0Fycm93VXAnICYmIHJvd0luZGV4IC0gMSA+PSAwKSB7XG4gICAgICBuZXh0Um93ID0gdGFibGVCb2R5Q2hpbGRyZW5bcm93SW5kZXggLSAxXVxuICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnQXJyb3dEb3duJyAmJiByb3dJbmRleCArIDEgPCB0YWJsZUJvZHlDaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgIG5leHRSb3cgPSB0YWJsZUJvZHlDaGlsZHJlbltyb3dJbmRleCArIDFdXG4gICAgfVxuXG4gICAgaWYgKG5leHRSb3cgJiYgbmV4dFJvdy5jaGlsZHJlbikge1xuICAgICAgbmV4dEl0ZW1Ub0ZvY3VzID0gbmV4dFJvdy5jaGlsZHJlbltjb2x1bW5JbmRleF1cbiAgICB9XG4gIH1cblxuICBpZiAobmV4dEl0ZW1Ub0ZvY3VzICYmIG5leHRJdGVtVG9Gb2N1cy5oYXNBdHRyaWJ1dGUoJ3RhYmluZGV4JykpIHtcbiAgICBuZXh0SXRlbVRvRm9jdXMuZm9jdXMoKVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2UsU0FBU0EsK0JBQVQsQ0FBeUNDLEdBQXpDLEVBQThDQyxHQUE5QyxFQUFtRDtFQUNoRTtFQUNBLElBQU1DLGdCQUFnQixHQUFHQyxLQUFLLENBQUNDLElBQU4sQ0FBV0gsR0FBRyxDQUFDSSxhQUFKLENBQWtCQyxRQUE3QixDQUF6QjtFQUNBLElBQU1DLFdBQVcsR0FBR0wsZ0JBQWdCLENBQUNNLE9BQWpCLENBQXlCUCxHQUF6QixDQUFwQjtFQUVBLElBQUlRLGVBQUo7O0VBQ0EsSUFBSVQsR0FBRyxLQUFLLFdBQVIsSUFBdUJBLEdBQUcsS0FBSyxZQUFuQyxFQUFpRDtJQUMvQyxJQUFJQSxHQUFHLEtBQUssV0FBUixJQUF1Qk8sV0FBVyxHQUFHLENBQWQsSUFBbUIsQ0FBOUMsRUFBaUQ7TUFDL0NFLGVBQWUsR0FBR1AsZ0JBQWdCLENBQUNLLFdBQVcsR0FBRyxDQUFmLENBQWxDO0lBQ0QsQ0FGRCxNQUVPLElBQ0xQLEdBQUcsS0FBSyxZQUFSLElBQ0FPLFdBQVcsR0FBRyxDQUFkLEdBQWtCTCxnQkFBZ0IsQ0FBQ1EsTUFGOUIsRUFHTDtNQUNBRCxlQUFlLEdBQUdQLGdCQUFnQixDQUFDSyxXQUFXLEdBQUcsQ0FBZixDQUFsQztJQUNEO0VBQ0YsQ0FURCxNQVNPLElBQUlQLEdBQUcsS0FBSyxTQUFSLElBQXFCQSxHQUFHLEtBQUssV0FBakMsRUFBOEM7SUFDbkQ7SUFDQSxJQUFNVyxpQkFBaUIsR0FBR1IsS0FBSyxDQUFDQyxJQUFOLENBQ3hCSCxHQUFHLENBQUNJLGFBQUosQ0FBa0JBLGFBQWxCLENBQWdDQyxRQURSLENBQTFCO0lBR0EsSUFBTU0sUUFBUSxHQUFHRCxpQkFBaUIsQ0FBQ0gsT0FBbEIsQ0FBMEJQLEdBQUcsQ0FBQ0ksYUFBOUIsQ0FBakI7SUFFQSxJQUFJUSxPQUFKOztJQUNBLElBQUliLEdBQUcsS0FBSyxTQUFSLElBQXFCWSxRQUFRLEdBQUcsQ0FBWCxJQUFnQixDQUF6QyxFQUE0QztNQUMxQ0MsT0FBTyxHQUFHRixpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQVosQ0FBM0I7SUFDRCxDQUZELE1BRU8sSUFBSVosR0FBRyxLQUFLLFdBQVIsSUFBdUJZLFFBQVEsR0FBRyxDQUFYLEdBQWVELGlCQUFpQixDQUFDRCxNQUE1RCxFQUFvRTtNQUN6RUcsT0FBTyxHQUFHRixpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQVosQ0FBM0I7SUFDRDs7SUFFRCxJQUFJQyxPQUFPLElBQUlBLE9BQU8sQ0FBQ1AsUUFBdkIsRUFBaUM7TUFDL0JHLGVBQWUsR0FBR0ksT0FBTyxDQUFDUCxRQUFSLENBQWlCQyxXQUFqQixDQUFsQjtJQUNEO0VBQ0Y7O0VBRUQsSUFBSUUsZUFBZSxJQUFJQSxlQUFlLENBQUNLLFlBQWhCLENBQTZCLFVBQTdCLENBQXZCLEVBQWlFO0lBQy9ETCxlQUFlLENBQUNNLEtBQWhCO0VBQ0Q7QUFDRiJ9