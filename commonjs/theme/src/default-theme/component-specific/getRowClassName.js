"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _tinycolor = _interopRequireDefault(require("tinycolor2"));

var _themer = require("../../../../themer");

var _memoizeClassName = _interopRequireDefault(require("../utils/memoizeClassName"));

var _scales = _interopRequireDefault(require("../foundational-styles/scales"));

var _palette = _interopRequireDefault(require("../foundational-styles/palette"));

var Appearances = {};
Appearances["default"] = _themer.Themer.createRowAppearance({
  base: {
    color: _palette["default"].neutral.base
  },
  hover: {
    backgroundColor: _scales["default"].neutral.N1A
  },
  focus: {
    backgroundColor: _scales["default"].blue.B1A
  },
  active: {
    backgroundColor: _scales["default"].blue.B2A
  },
  current: {}
});
Appearances.danger = _themer.Themer.createRowAppearance({
  base: {
    backgroundColor: _palette["default"].red.lightest
  },
  hover: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].red.lightest).darken(1).toString()
  },
  focus: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].red.lightest).darken(1.5).toString()
  },
  active: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].red.lightest).darken(2.2).toString()
  },
  current: {}
});
Appearances.warning = _themer.Themer.createRowAppearance({
  base: {
    backgroundColor: _palette["default"].orange.lightest
  },
  hover: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].orange.lightest).darken(1).toString()
  },
  focus: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].orange.lightest).darken(1.5).toString()
  },
  active: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].orange.lightest).darken(2.5).toString()
  },
  current: {}
});
Appearances.success = _themer.Themer.createRowAppearance({
  base: {
    backgroundColor: _palette["default"].green.lightest
  },
  hover: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].green.lightest).darken(1).toString()
  },
  focus: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].green.lightest).darken(2).toString()
  },
  active: {
    backgroundColor: (0, _tinycolor["default"])(_palette["default"].green.lightest).darken(3).toString()
  },
  current: {}
});
/**
 * Get the appearance of a `Row`.
 * @param {string} appearance â€” only one default appearance.
 * @param {string} intent - none, info, success, warning, danger.
 * @return {string} the appearance object.
 */

var getRowAppearance = function getRowAppearance(appearance, intent) {
  switch (intent) {
    case 'danger':
      return Appearances.danger;

    case 'warning':
      return Appearances.warning;

    case 'success':
      return Appearances.success;

    case 'none':
    default:
      return Appearances["default"];
  }
};
/**
 * Get the className of a `Row`.
 * @param {string} appearance
 * @return {string} the appearance class name.
 */


var _default = (0, _memoizeClassName["default"])(getRowAppearance);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcHBlYXJhbmNlcyIsIlRoZW1lciIsImNyZWF0ZVJvd0FwcGVhcmFuY2UiLCJiYXNlIiwiY29sb3IiLCJwYWxldHRlIiwibmV1dHJhbCIsImhvdmVyIiwiYmFja2dyb3VuZENvbG9yIiwic2NhbGVzIiwiTjFBIiwiZm9jdXMiLCJibHVlIiwiQjFBIiwiYWN0aXZlIiwiQjJBIiwiY3VycmVudCIsImRhbmdlciIsInJlZCIsImxpZ2h0ZXN0IiwidGlueWNvbG9yIiwiZGFya2VuIiwidG9TdHJpbmciLCJ3YXJuaW5nIiwib3JhbmdlIiwic3VjY2VzcyIsImdyZWVuIiwiZ2V0Um93QXBwZWFyYW5jZSIsImFwcGVhcmFuY2UiLCJpbnRlbnQiLCJtZW1vaXplQ2xhc3NOYW1lIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3RoZW1lL3NyYy9kZWZhdWx0LXRoZW1lL2NvbXBvbmVudC1zcGVjaWZpYy9nZXRSb3dDbGFzc05hbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRpbnljb2xvciBmcm9tICd0aW55Y29sb3IyJ1xuaW1wb3J0IHsgVGhlbWVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vdGhlbWVyJ1xuaW1wb3J0IG1lbW9pemVDbGFzc05hbWUgZnJvbSAnLi4vdXRpbHMvbWVtb2l6ZUNsYXNzTmFtZSdcbmltcG9ydCBzY2FsZXMgZnJvbSAnLi4vZm91bmRhdGlvbmFsLXN0eWxlcy9zY2FsZXMnXG5pbXBvcnQgcGFsZXR0ZSBmcm9tICcuLi9mb3VuZGF0aW9uYWwtc3R5bGVzL3BhbGV0dGUnXG5cbmNvbnN0IEFwcGVhcmFuY2VzID0ge31cblxuQXBwZWFyYW5jZXMuZGVmYXVsdCA9IFRoZW1lci5jcmVhdGVSb3dBcHBlYXJhbmNlKHtcbiAgYmFzZToge1xuICAgIGNvbG9yOiBwYWxldHRlLm5ldXRyYWwuYmFzZVxuICB9LFxuXG4gIGhvdmVyOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBzY2FsZXMubmV1dHJhbC5OMUFcbiAgfSxcblxuICBmb2N1czoge1xuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLmJsdWUuQjFBXG4gIH0sXG5cbiAgYWN0aXZlOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBzY2FsZXMuYmx1ZS5CMkFcbiAgfSxcblxuICBjdXJyZW50OiB7fVxufSlcblxuQXBwZWFyYW5jZXMuZGFuZ2VyID0gVGhlbWVyLmNyZWF0ZVJvd0FwcGVhcmFuY2Uoe1xuICBiYXNlOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnJlZC5saWdodGVzdFxuICB9LFxuXG4gIGhvdmVyOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiB0aW55Y29sb3IocGFsZXR0ZS5yZWQubGlnaHRlc3QpXG4gICAgICAuZGFya2VuKDEpXG4gICAgICAudG9TdHJpbmcoKVxuICB9LFxuXG4gIGZvY3VzOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiB0aW55Y29sb3IocGFsZXR0ZS5yZWQubGlnaHRlc3QpXG4gICAgICAuZGFya2VuKDEuNSlcbiAgICAgIC50b1N0cmluZygpXG4gIH0sXG5cbiAgYWN0aXZlOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiB0aW55Y29sb3IocGFsZXR0ZS5yZWQubGlnaHRlc3QpXG4gICAgICAuZGFya2VuKDIuMilcbiAgICAgIC50b1N0cmluZygpXG4gIH0sXG5cbiAgY3VycmVudDoge31cbn0pXG5cbkFwcGVhcmFuY2VzLndhcm5pbmcgPSBUaGVtZXIuY3JlYXRlUm93QXBwZWFyYW5jZSh7XG4gIGJhc2U6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUub3JhbmdlLmxpZ2h0ZXN0XG4gIH0sXG5cbiAgaG92ZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLm9yYW5nZS5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMSlcbiAgICAgIC50b1N0cmluZygpXG4gIH0sXG5cbiAgZm9jdXM6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLm9yYW5nZS5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMS41KVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBhY3RpdmU6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLm9yYW5nZS5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMi41KVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBjdXJyZW50OiB7fVxufSlcblxuQXBwZWFyYW5jZXMuc3VjY2VzcyA9IFRoZW1lci5jcmVhdGVSb3dBcHBlYXJhbmNlKHtcbiAgYmFzZToge1xuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5ncmVlbi5saWdodGVzdFxuICB9LFxuXG4gIGhvdmVyOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiB0aW55Y29sb3IocGFsZXR0ZS5ncmVlbi5saWdodGVzdClcbiAgICAgIC5kYXJrZW4oMSlcbiAgICAgIC50b1N0cmluZygpXG4gIH0sXG5cbiAgZm9jdXM6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLmdyZWVuLmxpZ2h0ZXN0KVxuICAgICAgLmRhcmtlbigyKVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBhY3RpdmU6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRpbnljb2xvcihwYWxldHRlLmdyZWVuLmxpZ2h0ZXN0KVxuICAgICAgLmRhcmtlbigzKVxuICAgICAgLnRvU3RyaW5nKClcbiAgfSxcblxuICBjdXJyZW50OiB7fVxufSlcblxuLyoqXG4gKiBHZXQgdGhlIGFwcGVhcmFuY2Ugb2YgYSBgUm93YC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBhcHBlYXJhbmNlIOKAlCBvbmx5IG9uZSBkZWZhdWx0IGFwcGVhcmFuY2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gaW50ZW50IC0gbm9uZSwgaW5mbywgc3VjY2Vzcywgd2FybmluZywgZGFuZ2VyLlxuICogQHJldHVybiB7c3RyaW5nfSB0aGUgYXBwZWFyYW5jZSBvYmplY3QuXG4gKi9cbmNvbnN0IGdldFJvd0FwcGVhcmFuY2UgPSAoYXBwZWFyYW5jZSwgaW50ZW50KSA9PiB7XG4gIHN3aXRjaCAoaW50ZW50KSB7XG4gICAgY2FzZSAnZGFuZ2VyJzpcbiAgICAgIHJldHVybiBBcHBlYXJhbmNlcy5kYW5nZXJcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIHJldHVybiBBcHBlYXJhbmNlcy53YXJuaW5nXG4gICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICByZXR1cm4gQXBwZWFyYW5jZXMuc3VjY2Vzc1xuICAgIGNhc2UgJ25vbmUnOlxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gQXBwZWFyYW5jZXMuZGVmYXVsdFxuICB9XG59XG5cbi8qKlxuICogR2V0IHRoZSBjbGFzc05hbWUgb2YgYSBgUm93YC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBhcHBlYXJhbmNlXG4gKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBhcHBlYXJhbmNlIGNsYXNzIG5hbWUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemVDbGFzc05hbWUoZ2V0Um93QXBwZWFyYW5jZSlcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLEVBQXBCO0FBRUFBLFdBQVcsV0FBWCxHQUFzQkMsY0FBQSxDQUFPQyxtQkFBUCxDQUEyQjtFQUMvQ0MsSUFBSSxFQUFFO0lBQ0pDLEtBQUssRUFBRUMsbUJBQUEsQ0FBUUMsT0FBUixDQUFnQkg7RUFEbkIsQ0FEeUM7RUFLL0NJLEtBQUssRUFBRTtJQUNMQyxlQUFlLEVBQUVDLGtCQUFBLENBQU9ILE9BQVAsQ0FBZUk7RUFEM0IsQ0FMd0M7RUFTL0NDLEtBQUssRUFBRTtJQUNMSCxlQUFlLEVBQUVDLGtCQUFBLENBQU9HLElBQVAsQ0FBWUM7RUFEeEIsQ0FUd0M7RUFhL0NDLE1BQU0sRUFBRTtJQUNOTixlQUFlLEVBQUVDLGtCQUFBLENBQU9HLElBQVAsQ0FBWUc7RUFEdkIsQ0FidUM7RUFpQi9DQyxPQUFPLEVBQUU7QUFq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