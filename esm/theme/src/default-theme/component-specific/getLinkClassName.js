import tinycolor from 'tinycolor2';
import { Themer } from '../../../../themer';
import memoizeClassName from '../utils/memoizeClassName';
import palette from '../foundational-styles/palette';
/**
 * The link appearance unlike the Button is based on the color property.
 * Currently the Link does not support the Intent or the appearance interface.
 * @param {string} color
 * @return {Object} appearance of the link.
 */

var getLinkAppearance = function getLinkAppearance(color) {
  switch (color) {
    case 'neutral':
      return Themer.createLinkAppearance({
        base: {
          color: palette.neutral.base
        },
        hover: {
          color: tinycolor(palette.neutral.base).lighten(10).toString()
        },
        active: {
          color: tinycolor(palette.neutral.base).darken(10).toString()
        },
        focus: {
          boxShadow: "0 0 0 2px ".concat(tinycolor(palette.neutral.base).setAlpha(0.4).toString())
        }
      });

    case 'green':
      return Themer.createLinkAppearance({
        base: {
          color: palette.green.base
        },
        hover: {
          color: tinycolor(palette.green.base).lighten(10).toString()
        },
        active: {
          color: tinycolor(palette.green.base).darken(10).toString()
        },
        focus: {
          boxShadow: "0 0 0 2px ".concat(tinycolor(palette.green.base).setAlpha(0.4).toString())
        }
      });

    case 'default':
    case 'blue':
    default:
      return Themer.createLinkAppearance({
        base: {
          color: palette.blue.base
        },
        hover: {
          color: tinycolor(palette.blue.base).lighten(10).toString()
        },
        active: {
          color: tinycolor(palette.blue.base).darken(10).toString()
        },
        focus: {
          boxShadow: "0 0 0 2px ".concat(tinycolor(palette.blue.base).setAlpha(0.4).toString())
        }
      });
  }
};
/**
 * Get the className of a `Link` component.
 * @param {string} color
 * @return {string} the appearance class name.
 */


export default memoizeClassName(getLinkAppearance);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0aW55Y29sb3IiLCJUaGVtZXIiLCJtZW1vaXplQ2xhc3NOYW1lIiwicGFsZXR0ZSIsImdldExpbmtBcHBlYXJhbmNlIiwiY29sb3IiLCJjcmVhdGVMaW5rQXBwZWFyYW5jZSIsImJhc2UiLCJuZXV0cmFsIiwiaG92ZXIiLCJsaWdodGVuIiwidG9TdHJpbmciLCJhY3RpdmUiLCJkYXJrZW4iLCJmb2N1cyIsImJveFNoYWRvdyIsInNldEFscGhhIiwiZ3JlZW4iLCJibHVlIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3RoZW1lL3NyYy9kZWZhdWx0LXRoZW1lL2NvbXBvbmVudC1zcGVjaWZpYy9nZXRMaW5rQ2xhc3NOYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0aW55Y29sb3IgZnJvbSAndGlueWNvbG9yMidcbmltcG9ydCB7IFRoZW1lciB9IGZyb20gJy4uLy4uLy4uLy4uL3RoZW1lcidcbmltcG9ydCBtZW1vaXplQ2xhc3NOYW1lIGZyb20gJy4uL3V0aWxzL21lbW9pemVDbGFzc05hbWUnXG5pbXBvcnQgcGFsZXR0ZSBmcm9tICcuLi9mb3VuZGF0aW9uYWwtc3R5bGVzL3BhbGV0dGUnXG5cbi8qKlxuICogVGhlIGxpbmsgYXBwZWFyYW5jZSB1bmxpa2UgdGhlIEJ1dHRvbiBpcyBiYXNlZCBvbiB0aGUgY29sb3IgcHJvcGVydHkuXG4gKiBDdXJyZW50bHkgdGhlIExpbmsgZG9lcyBub3Qgc3VwcG9ydCB0aGUgSW50ZW50IG9yIHRoZSBhcHBlYXJhbmNlIGludGVyZmFjZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvclxuICogQHJldHVybiB7T2JqZWN0fSBhcHBlYXJhbmNlIG9mIHRoZSBsaW5rLlxuICovXG5jb25zdCBnZXRMaW5rQXBwZWFyYW5jZSA9IGNvbG9yID0+IHtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ25ldXRyYWwnOlxuICAgICAgcmV0dXJuIFRoZW1lci5jcmVhdGVMaW5rQXBwZWFyYW5jZSh7XG4gICAgICAgIGJhc2U6IHtcbiAgICAgICAgICBjb2xvcjogcGFsZXR0ZS5uZXV0cmFsLmJhc2VcbiAgICAgICAgfSxcbiAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICBjb2xvcjogdGlueWNvbG9yKHBhbGV0dGUubmV1dHJhbC5iYXNlKVxuICAgICAgICAgICAgLmxpZ2h0ZW4oMTApXG4gICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICB9LFxuICAgICAgICBhY3RpdmU6IHtcbiAgICAgICAgICBjb2xvcjogdGlueWNvbG9yKHBhbGV0dGUubmV1dHJhbC5iYXNlKVxuICAgICAgICAgICAgLmRhcmtlbigxMClcbiAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgIH0sXG4gICAgICAgIGZvY3VzOiB7XG4gICAgICAgICAgYm94U2hhZG93OiBgMCAwIDAgMnB4ICR7dGlueWNvbG9yKHBhbGV0dGUubmV1dHJhbC5iYXNlKVxuICAgICAgICAgICAgLnNldEFscGhhKDAuNClcbiAgICAgICAgICAgIC50b1N0cmluZygpfWBcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICBjYXNlICdncmVlbic6XG4gICAgICByZXR1cm4gVGhlbWVyLmNyZWF0ZUxpbmtBcHBlYXJhbmNlKHtcbiAgICAgICAgYmFzZToge1xuICAgICAgICAgIGNvbG9yOiBwYWxldHRlLmdyZWVuLmJhc2VcbiAgICAgICAgfSxcbiAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICBjb2xvcjogdGlueWNvbG9yKHBhbGV0dGUuZ3JlZW4uYmFzZSlcbiAgICAgICAgICAgIC5saWdodGVuKDEwKVxuICAgICAgICAgICAgLnRvU3RyaW5nKClcbiAgICAgICAgfSxcbiAgICAgICAgYWN0aXZlOiB7XG4gICAgICAgICAgY29sb3I6IHRpbnljb2xvcihwYWxldHRlLmdyZWVuLmJhc2UpXG4gICAgICAgICAgICAuZGFya2VuKDEwKVxuICAgICAgICAgICAgLnRvU3RyaW5nKClcbiAgICAgICAgfSxcbiAgICAgICAgZm9jdXM6IHtcbiAgICAgICAgICBib3hTaGFkb3c6IGAwIDAgMCAycHggJHt0aW55Y29sb3IocGFsZXR0ZS5ncmVlbi5iYXNlKVxuICAgICAgICAgICAgLnNldEFscGhhKDAuNClcbiAgICAgICAgICAgIC50b1N0cmluZygpfWBcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICBjYXNlICdkZWZhdWx0JzpcbiAgICBjYXNlICdibHVlJzpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFRoZW1lci5jcmVhdGVMaW5rQXBwZWFyYW5jZSh7XG4gICAgICAgIGJhc2U6IHtcbiAgICAgICAgICBjb2xvcjogcGFsZXR0ZS5ibHVlLmJhc2VcbiAgICAgICAgfSxcbiAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICBjb2xvcjogdGlueWNvbG9yKHBhbGV0dGUuYmx1ZS5iYXNlKVxuICAgICAgICAgICAgLmxpZ2h0ZW4oMTApXG4gICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICB9LFxuICAgICAgICBhY3RpdmU6IHtcbiAgICAgICAgICBjb2xvcjogdGlueWNvbG9yKHBhbGV0dGUuYmx1ZS5iYXNlKVxuICAgICAgICAgICAgLmRhcmtlbigxMClcbiAgICAgICAgICAgIC50b1N0cmluZygpXG4gICAgICAgIH0sXG4gICAgICAgIGZvY3VzOiB7XG4gICAgICAgICAgYm94U2hhZG93OiBgMCAwIDAgMnB4ICR7dGlueWNvbG9yKHBhbGV0dGUuYmx1ZS5iYXNlKVxuICAgICAgICAgICAgLnNldEFscGhhKDAuNClcbiAgICAgICAgICAgIC50b1N0cmluZygpfWBcbiAgICAgICAgfVxuICAgICAgfSlcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgY2xhc3NOYW1lIG9mIGEgYExpbmtgIGNvbXBvbmVudC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvclxuICogQHJldHVybiB7c3RyaW5nfSB0aGUgYXBwZWFyYW5jZSBjbGFzcyBuYW1lLlxuICovXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplQ2xhc3NOYW1lKGdldExpbmtBcHBlYXJh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